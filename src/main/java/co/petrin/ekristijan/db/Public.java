/*
 * This file is generated by jOOQ.
 */
package co.petrin.ekristijan.db;


import co.petrin.ekristijan.db.tables.Departure;
import co.petrin.ekristijan.db.tables.ExtraordinaryDeparture;
import co.petrin.ekristijan.db.tables.PasswordReset;
import co.petrin.ekristijan.db.tables.Pupil;
import co.petrin.ekristijan.db.tables.RegisteredDevice;
import co.petrin.ekristijan.db.tables.School;
import co.petrin.ekristijan.db.tables.Summon;
import co.petrin.ekristijan.db.tables.SummonAck;
import co.petrin.ekristijan.db.tables.Teacher;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Nonnull;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * A record of when a pupil had left school
     */
    public final Departure DEPARTURE = Departure.DEPARTURE;

    /**
     * A planned departure at a non-standard time about which the teacher must
     * be notified. Guaranteed there is only one extraordinary departure per
     * day!
     */
    public final ExtraordinaryDeparture EXTRAORDINARY_DEPARTURE = ExtraordinaryDeparture.EXTRAORDINARY_DEPARTURE;

    /**
     * A password reset request
     */
    public final PasswordReset PASSWORD_RESET = PasswordReset.PASSWORD_RESET;

    /**
     * A pupil whose departures we are tracking
     */
    public final Pupil PUPIL = Pupil.PUPIL;

    /**
     * A device registered to receive notifications, 
     */
    public final RegisteredDevice REGISTERED_DEVICE = RegisteredDevice.REGISTERED_DEVICE;

    /**
     * A school with pupils &amp; teachers
     */
    public final School SCHOOL = School.SCHOOL;

    /**
     * A request for the pupil to come to the door
     */
    public final Summon SUMMON = Summon.SUMMON;

    /**
     * The table <code>public.summon_ack</code>.
     */
    public final SummonAck SUMMON_ACK = SummonAck.SUMMON_ACK;

    /**
     * A teacher authorized to supervise children
     */
    public final Teacher TEACHER = Teacher.TEACHER;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    @Nonnull
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    @Nonnull
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Departure.DEPARTURE,
            ExtraordinaryDeparture.EXTRAORDINARY_DEPARTURE,
            PasswordReset.PASSWORD_RESET,
            Pupil.PUPIL,
            RegisteredDevice.REGISTERED_DEVICE,
            School.SCHOOL,
            Summon.SUMMON,
            SummonAck.SUMMON_ACK,
            Teacher.TEACHER
        );
    }
}
