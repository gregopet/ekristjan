/*
 * This file is generated by jOOQ.
 */
package co.petrin.ekristijan.db.tables.records;


import co.petrin.ekristijan.db.tables.SummonAck;

import java.time.OffsetDateTime;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SummonAckRecord extends UpdatableRecordImpl<SummonAckRecord> implements Record4<Integer, Integer, Integer, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.summon_ack.summon_ack_id</code>.
     */
    public void setSummonAckId(@Nonnull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.summon_ack.summon_ack_id</code>.
     */
    @Nonnull
    public Integer getSummonAckId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.summon_ack.summon_id</code>. The summon that was
     * acknowledged
     */
    public void setSummonId(@Nonnull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.summon_ack.summon_id</code>. The summon that was
     * acknowledged
     */
    @Nonnull
    public Integer getSummonId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.summon_ack.teacher_id</code>. Teacher who
     * acknowledged the summon
     */
    public void setTeacherId(@Nonnull Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.summon_ack.teacher_id</code>. Teacher who
     * acknowledged the summon
     */
    @Nonnull
    public Integer getTeacherId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.summon_ack.time</code>. Time at which the summon
     * was acknowledged
     */
    public void setTime(@Nonnull OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.summon_ack.time</code>. Time at which the summon
     * was acknowledged
     */
    @Nonnull
    public OffsetDateTime getTime() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row4<Integer, Integer, Integer, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row4<Integer, Integer, Integer, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Integer> field1() {
        return SummonAck.SUMMON_ACK.SUMMON_ACK_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field2() {
        return SummonAck.SUMMON_ACK.SUMMON_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field3() {
        return SummonAck.SUMMON_ACK.TEACHER_ID;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field4() {
        return SummonAck.SUMMON_ACK.TIME;
    }

    @Override
    @Nonnull
    public Integer component1() {
        return getSummonAckId();
    }

    @Override
    @Nonnull
    public Integer component2() {
        return getSummonId();
    }

    @Override
    @Nonnull
    public Integer component3() {
        return getTeacherId();
    }

    @Override
    @Nonnull
    public OffsetDateTime component4() {
        return getTime();
    }

    @Override
    @Nonnull
    public Integer value1() {
        return getSummonAckId();
    }

    @Override
    @Nonnull
    public Integer value2() {
        return getSummonId();
    }

    @Override
    @Nonnull
    public Integer value3() {
        return getTeacherId();
    }

    @Override
    @Nonnull
    public OffsetDateTime value4() {
        return getTime();
    }

    @Override
    @Nonnull
    public SummonAckRecord value1(@Nonnull Integer value) {
        setSummonAckId(value);
        return this;
    }

    @Override
    @Nonnull
    public SummonAckRecord value2(@Nonnull Integer value) {
        setSummonId(value);
        return this;
    }

    @Override
    @Nonnull
    public SummonAckRecord value3(@Nonnull Integer value) {
        setTeacherId(value);
        return this;
    }

    @Override
    @Nonnull
    public SummonAckRecord value4(@Nonnull OffsetDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    @Nonnull
    public SummonAckRecord values(@Nonnull Integer value1, @Nonnull Integer value2, @Nonnull Integer value3, @Nonnull OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SummonAckRecord
     */
    public SummonAckRecord() {
        super(SummonAck.SUMMON_ACK);
    }

    /**
     * Create a detached, initialised SummonAckRecord
     */
    public SummonAckRecord(@Nonnull Integer summonAckId, @Nonnull Integer summonId, @Nonnull Integer teacherId, @Nonnull OffsetDateTime time) {
        super(SummonAck.SUMMON_ACK);

        setSummonAckId(summonAckId);
        setSummonId(summonId);
        setTeacherId(teacherId);
        setTime(time);
    }
}
