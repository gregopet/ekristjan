/*
 * This file is generated by jOOQ.
 */
package co.petrin.ekristijan.db.tables.records;


import co.petrin.ekristijan.db.tables.RegisteredDevice;

import java.time.OffsetDateTime;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * A device registered to receive notifications, 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegisteredDeviceRecord extends UpdatableRecordImpl<RegisteredDeviceRecord> implements Record8<Integer, Integer, String, String, String, String, String[], OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.registered_device.registered_device_id</code>.
     */
    public void setRegisteredDeviceId(@Nonnull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.registered_device.registered_device_id</code>.
     */
    @Nonnull
    public Integer getRegisteredDeviceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.registered_device.last_teacher_id</code>. The
     * teacher most recently logged into this device
     */
    public void setLastTeacherId(@Nonnull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.registered_device.last_teacher_id</code>. The
     * teacher most recently logged into this device
     */
    @Nonnull
    public Integer getLastTeacherId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.registered_device.user_agent</code>. User-Agent
     * of the device that can be used to identify its type
     */
    public void setUserAgent(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.registered_device.user_agent</code>. User-Agent
     * of the device that can be used to identify its type
     */
    @Nullable
    public String getUserAgent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.registered_device.push_endpoint</code>. The
     * endpoint to which a push notification must be made. It is unique but can
     * possibly be null for devices that don't support push
     */
    public void setPushEndpoint(@Nullable String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.registered_device.push_endpoint</code>. The
     * endpoint to which a push notification must be made. It is unique but can
     * possibly be null for devices that don't support push
     */
    @Nullable
    public String getPushEndpoint() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.registered_device.push_auth</code>. The push
     * notification authentication secret
     */
    public void setPushAuth(@Nullable String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.registered_device.push_auth</code>. The push
     * notification authentication secret
     */
    @Nullable
    public String getPushAuth() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.registered_device.push_p256dh</code>. The push
     * notification authentication public key
     */
    public void setPushP256dh(@Nullable String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.registered_device.push_p256dh</code>. The push
     * notification authentication public key
     */
    @Nullable
    public String getPushP256dh() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.registered_device.classes</code>. The classes
     * this device wants to receive notifications for
     */
    public void setClasses(@Nonnull String[] value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.registered_device.classes</code>. The classes
     * this device wants to receive notifications for
     */
    @Nonnull
    public String[] getClasses() {
        return (String[]) get(6);
    }

    /**
     * Setter for <code>public.registered_device.created_at</code>. The date on
     * which this device was first seen
     */
    public void setCreatedAt(@Nonnull OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.registered_device.created_at</code>. The date on
     * which this device was first seen
     */
    @Nonnull
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row8<Integer, Integer, String, String, String, String, String[], OffsetDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row8<Integer, Integer, String, String, String, String, String[], OffsetDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Integer> field1() {
        return RegisteredDevice.REGISTERED_DEVICE.REGISTERED_DEVICE_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field2() {
        return RegisteredDevice.REGISTERED_DEVICE.LAST_TEACHER_ID;
    }

    @Override
    @Nonnull
    public Field<String> field3() {
        return RegisteredDevice.REGISTERED_DEVICE.USER_AGENT;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return RegisteredDevice.REGISTERED_DEVICE.PUSH_ENDPOINT;
    }

    @Override
    @Nonnull
    public Field<String> field5() {
        return RegisteredDevice.REGISTERED_DEVICE.PUSH_AUTH;
    }

    @Override
    @Nonnull
    public Field<String> field6() {
        return RegisteredDevice.REGISTERED_DEVICE.PUSH_P256DH;
    }

    @Override
    @Nonnull
    public Field<String[]> field7() {
        return RegisteredDevice.REGISTERED_DEVICE.CLASSES;
    }

    @Override
    @Nonnull
    public Field<OffsetDateTime> field8() {
        return RegisteredDevice.REGISTERED_DEVICE.CREATED_AT;
    }

    @Override
    @Nonnull
    public Integer component1() {
        return getRegisteredDeviceId();
    }

    @Override
    @Nonnull
    public Integer component2() {
        return getLastTeacherId();
    }

    @Override
    @Nullable
    public String component3() {
        return getUserAgent();
    }

    @Override
    @Nullable
    public String component4() {
        return getPushEndpoint();
    }

    @Override
    @Nullable
    public String component5() {
        return getPushAuth();
    }

    @Override
    @Nullable
    public String component6() {
        return getPushP256dh();
    }

    @Override
    @Nonnull
    public String[] component7() {
        return getClasses();
    }

    @Override
    @Nonnull
    public OffsetDateTime component8() {
        return getCreatedAt();
    }

    @Override
    @Nonnull
    public Integer value1() {
        return getRegisteredDeviceId();
    }

    @Override
    @Nonnull
    public Integer value2() {
        return getLastTeacherId();
    }

    @Override
    @Nullable
    public String value3() {
        return getUserAgent();
    }

    @Override
    @Nullable
    public String value4() {
        return getPushEndpoint();
    }

    @Override
    @Nullable
    public String value5() {
        return getPushAuth();
    }

    @Override
    @Nullable
    public String value6() {
        return getPushP256dh();
    }

    @Override
    @Nonnull
    public String[] value7() {
        return getClasses();
    }

    @Override
    @Nonnull
    public OffsetDateTime value8() {
        return getCreatedAt();
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value1(@Nonnull Integer value) {
        setRegisteredDeviceId(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value2(@Nonnull Integer value) {
        setLastTeacherId(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value3(@Nullable String value) {
        setUserAgent(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value4(@Nullable String value) {
        setPushEndpoint(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value5(@Nullable String value) {
        setPushAuth(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value6(@Nullable String value) {
        setPushP256dh(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value7(@Nonnull String[] value) {
        setClasses(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord value8(@Nonnull OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    @Nonnull
    public RegisteredDeviceRecord values(@Nonnull Integer value1, @Nonnull Integer value2, @Nullable String value3, @Nullable String value4, @Nullable String value5, @Nullable String value6, @Nonnull String[] value7, @Nonnull OffsetDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegisteredDeviceRecord
     */
    public RegisteredDeviceRecord() {
        super(RegisteredDevice.REGISTERED_DEVICE);
    }

    /**
     * Create a detached, initialised RegisteredDeviceRecord
     */
    public RegisteredDeviceRecord(@Nonnull Integer registeredDeviceId, @Nonnull Integer lastTeacherId, @Nullable String userAgent, @Nullable String pushEndpoint, @Nullable String pushAuth, @Nullable String pushP256dh, @Nonnull String[] classes, @Nonnull OffsetDateTime createdAt) {
        super(RegisteredDevice.REGISTERED_DEVICE);

        setRegisteredDeviceId(registeredDeviceId);
        setLastTeacherId(lastTeacherId);
        setUserAgent(userAgent);
        setPushEndpoint(pushEndpoint);
        setPushAuth(pushAuth);
        setPushP256dh(pushP256dh);
        setClasses(classes);
        setCreatedAt(createdAt);
    }
}
