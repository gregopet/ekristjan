/*
 * This file is generated by jOOQ.
 */
package co.petrin.ekristijan.db.tables.records;


import co.petrin.ekristijan.db.tables.PupilActivity;

import javax.annotation.Nonnull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The mapping between pupils and their activities
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PupilActivityRecord extends UpdatableRecordImpl<PupilActivityRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pupil_activity.pupil_id</code>.
     */
    public void setPupilId(@Nonnull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pupil_activity.pupil_id</code>.
     */
    @Nonnull
    public Integer getPupilId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.pupil_activity.activity_id</code>.
     */
    public void setActivityId(@Nonnull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pupil_activity.activity_id</code>.
     */
    @Nonnull
    public Integer getActivityId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Integer> field1() {
        return PupilActivity.PUPIL_ACTIVITY.PUPIL_ID;
    }

    @Override
    @Nonnull
    public Field<Integer> field2() {
        return PupilActivity.PUPIL_ACTIVITY.ACTIVITY_ID;
    }

    @Override
    @Nonnull
    public Integer component1() {
        return getPupilId();
    }

    @Override
    @Nonnull
    public Integer component2() {
        return getActivityId();
    }

    @Override
    @Nonnull
    public Integer value1() {
        return getPupilId();
    }

    @Override
    @Nonnull
    public Integer value2() {
        return getActivityId();
    }

    @Override
    @Nonnull
    public PupilActivityRecord value1(@Nonnull Integer value) {
        setPupilId(value);
        return this;
    }

    @Override
    @Nonnull
    public PupilActivityRecord value2(@Nonnull Integer value) {
        setActivityId(value);
        return this;
    }

    @Override
    @Nonnull
    public PupilActivityRecord values(@Nonnull Integer value1, @Nonnull Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PupilActivityRecord
     */
    public PupilActivityRecord() {
        super(PupilActivity.PUPIL_ACTIVITY);
    }

    /**
     * Create a detached, initialised PupilActivityRecord
     */
    public PupilActivityRecord(@Nonnull Integer pupilId, @Nonnull Integer activityId) {
        super(PupilActivity.PUPIL_ACTIVITY);

        setPupilId(pupilId);
        setActivityId(activityId);
    }
}
